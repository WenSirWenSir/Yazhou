package com.zbyj.Yazhou.LeftCompanyProgram.Factory;import android.content.Context;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.Matrix;import android.util.Log;import com.zbyj.Yazhou.LeftCompanyProgram.Config;import java.io.BufferedOutputStream;import java.io.File;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;public class FileoperationFactory {    /**     * save a bitmap imgage     */    public static void saveImageFile(Context mContext, Bitmap bm, String fileName) throws            Exception {        if (bm != null) {            File dirFile = new File(mContext.getFilesDir().getPath() + "/LeftCompany/Img/");            Log.i(Config.DEBUG, "FileoperationFactory.java[+]" + dirFile);            if (!dirFile.exists()) {                //no dir craete it                dirFile.mkdirs();                Log.e(Config.DEBUG, "FileoperationFactory.java[+]ERROR NO DIR");            }            File saveFile = new File(dirFile, fileName);            BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(saveFile));            bm.compress(Bitmap.CompressFormat.JPEG, 80, bos);            bos.flush();            bos.close();        } else {            Log.e(Config.DEBUG, "FileoperationFactory.java[+]ERROR BITMAP IS NULL");        }    }    /**     * get a bitmap image     *     * @return     */    public static Bitmap getImageFile(Context mContext, String fileName, boolean zoomIs) throws            Exception {        Bitmap file = null;        File imageFile = new File(mContext.getFilesDir().getPath() + "/LeftCompany/Img/");        Log.i(Config.DEBUG, "FileoperationFactory.java[+]" + imageFile);        if (!imageFile.exists()) {            //not save image in her            Log.e(Config.DEBUG, "FileOperationFactory.java[+]ERROR NO FILE");        } else {            BitmapFactory.Options opt = new BitmapFactory.Options();            opt.inPreferredConfig = Bitmap.Config.RGB_565;            opt.inPurgeable = true;            opt.inInputShareable = true;            FileInputStream fs = new FileInputStream(imageFile);            file = BitmapFactory.decodeStream(fs, null, opt);            if (zoomIs) {                //make scale                file = zoomImage(file, 300, 500);            } else {                return file;            }        }        return file;    }    /**     * zoom the image     *     * @return     */    public static Bitmap zoomImage(Bitmap bm, int width, int height) {        int w = bm.getWidth();        int h = bm.getHeight();        //calc        float scaleW = (width + width / 2) / w;        float scaleH = (height + height / 2) / h;        //get scalevalues        Matrix matrix = new Matrix();        matrix.postScale(scaleW, scaleH);        //get a new bitmap        Bitmap nb = Bitmap.createBitmap(bm, 0, 0, w, h, matrix, true);        bm.recycle();        bm = null;        System.gc();        return nb;    }}