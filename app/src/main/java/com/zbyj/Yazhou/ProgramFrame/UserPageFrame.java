package com.zbyj.Yazhou.ProgramFrame;import android.Manifest;import android.annotation.SuppressLint;import android.app.Activity;import android.app.AlertDialog;import android.graphics.Color;import android.graphics.drawable.GradientDrawable;import android.os.Bundle;import android.support.v4.app.ActivityCompat;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.zbyj.Yazhou.LeftCompanyProgram.CompanyClass.LeftCompanyProgramFragment;import com.zbyj.Yazhou.LeftCompanyProgram.ConfigPageClass;import com.zbyj.Yazhou.LeftCompanyProgram.Tools;import com.zbyj.Yazhou.ProgramAct.ExchangeAct;import com.zbyj.Yazhou.ProgramAct.UserAllAddrsAct;import com.zbyj.Yazhou.ProgramAct.UserHelpCenter;import com.zbyj.Yazhou.R;public class UserPageFrame extends LeftCompanyProgramFragment {    private RelativeLayout rl_headimg, rl_fbackground;    private ImageView btn_addr;    @Override    @SuppressLint({"NewApi", "ResourceType"})    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle            savedInstanceState) {        View view = LayoutInflater.from(getContext()).inflate(R.layout.framelayout_userpage, null);        init(view);        return view;    }    @SuppressLint({"NewApi", "ResourceType"})    private void init(View view) {        rl_headimg = view.findViewById(R.id.activity_usercontext_headImg);        rl_fbackground = view.findViewById(R.id.activity_usercontext_fBackground);        //界面的监听图片找        btn_addr = view.findViewById(R.id.activity_usercontext_btnPage_addrImage);        /**         * 设置图片的边框颜色         */        GradientDrawable gradientDrawable = new GradientDrawable();        gradientDrawable.setStroke(5, Color.parseColor("#efefef"));        gradientDrawable.setColor(Color.parseColor("#efefef"));        gradientDrawable.setCornerRadius(10);        gradientDrawable.setGradientType(GradientDrawable.RECTANGLE);        /**         * 设置背景的颜色         */        GradientDrawable gd_fbackground = new GradientDrawable();        gd_fbackground.setStroke(5, Color.parseColor("#efefef"));        gd_fbackground.setColor(Color.parseColor("#efefef"));        gd_fbackground.setCornerRadius(10);        gd_fbackground.setGradientType(GradientDrawable.RECTANGLE);        rl_fbackground.setBackground(gd_fbackground);        rl_headimg.setBackground(gradientDrawable);        Listener(view);    }    @SuppressLint("NewApi")    private void Listener(View view) {        /**         * 点击地址按钮         */        btn_addr.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                LCPF_StartActivity(UserAllAddrsAct.class);            }        });        /**         * 兑换卷的按钮监听         */        view.findViewById(R.id.activity_usercontext_btnExchange).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                LCPF_StartActivity(ExchangeAct.class);            }        });        view.findViewById(R.id.framelayout_userpage_btnServicePeo).setOnClickListener(new View                .OnClickListener() {            @Override            @SuppressLint("NewApi")            public void onClick(View v) {                com.zbyj.Yazhou.LeftCompanyProgram.ConfigPageClass.AlertViewIDpage                        alertViewIDpage = ConfigPageClass.getAlertViewIDpageInstance();                alertViewIDpage.setCanwindow(true);                View item = LayoutInflater.from(getContext()).inflate(R.layout                        .item_trueorfalse_dialog, null);                alertViewIDpage.setTitle((TextView) item.findViewById(R.id                        .item_trueorfalse_dialog_title));                alertViewIDpage.setContext((TextView) item.findViewById(R.id                        .item_trueorfalse_dialog_content));                alertViewIDpage.setCancle((TextView) item.findViewById(R.id                        .item_trueorfalse_dialog_btnCancle));                alertViewIDpage.setConfirm((TextView) item.findViewById(R.id                        .item_trueorfalse_dialog_btnDetermine));                Tools.showAlertDilg(item, getContext(), "提示", "为了保证您和客服的双向权益," +                        "本次通话我们可能会进行录音。并且我们需要您开启允许通话权限,是否继续?", "取消", "我已知晓,继续", new Tools                        .AlertDilgClick() {                    @Override                    public void onConfirm(AlertDialog alertDialog) {                        alertDialog.dismiss();                        //判断是否有拨打电话权限                        if (Tools.isPermission(getContext(), Manifest.permission.CALL_PHONE)) {                            Tools.callPhone(getContext(), Tools.getServicePeoPhone());                        } else {                            Toast.makeText(getContext(), "请打开您的拨打电话的权限", Toast.LENGTH_LONG).show();                            Tools.getPermission(getContext(), Manifest.permission.CALL_PHONE);                            UserPageFrame.this.requestPermissions(new String[]{Manifest                                    .permission.CALL_PHONE}, 2);                        }                    }                    @Override                    public void onCancle(AlertDialog alertDialog) {                        alertDialog.dismiss();                    }                }, alertViewIDpage);            }        });        view.findViewById(R.id.activity_usercontext_btnUserHelp).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                LCPF_StartActivity(UserHelpCenter.class);            }        });        /**         * 账户退出操作 清空TOKEN         */        view.findViewById(R.id.activity_userpage_btnBackAccount).setOnClickListener(new View                .OnClickListener() {            @Override            public void onClick(View v) {                com.zbyj.Yazhou.LeftCompanyProgram.ConfigPageClass.AlertViewIDpage                        alertViewIDpage = ConfigPageClass.getAlertViewIDpageInstance();                View item = LayoutInflater.from(getContext()).inflate(R.layout                        .item_trueorfalse_dialog, null);                alertViewIDpage.setCanwindow(true);                alertViewIDpage.setConfirm((TextView) item.findViewById(R.id                        .item_trueorfalse_dialog_btnDetermine));                alertViewIDpage.setContext((TextView) item.findViewById(R.id                        .item_trueorfalse_dialog_content));                alertViewIDpage.setTitle((TextView) item.findViewById(R.id                        .item_trueorfalse_dialog_title));                alertViewIDpage.setCancle((TextView) item.findViewById(R.id                        .item_trueorfalse_dialog_btnCancle));                Tools.showAlertDilg(item, getContext(), "提示", "确定操作之后," +                        "我们会清空手机里的记录。你可能无法进行预定/查询/领卷等的操作,确定操作?", "取消", "我已知晓", new Tools                        .AlertDilgClick() {                    @Override                    public void onConfirm(AlertDialog alertDialog) {                        Toast.makeText(getActivity(),"确定消除本地数据",Toast.LENGTH_SHORT).show();                        alertDialog.dismiss();                    }                    @Override                    public void onCancle(AlertDialog alertDialog) {                        //不操作                        alertDialog.dismiss();                    }                }, alertViewIDpage);            }        });    }}